#bat2dox regex rules, requires block mode (-b)
# Transforms a sheel-script file (.bat) in a c-like file that can be
# processed by Doxygen.
# Requires one or more functions and in last line (main) a call to a function. 
# Comments blocs in javastyle ("rem"+"/** ", or "::" +"/") also multiline, before functions and main
# This file must be used with regexfilter in shell or using a custom driver (see ShelldoxFilter.bat)
#Sun Sep 06 12:40:09 CEST 2009

# This will force block mode (same as "-b" on command line)
_CL_OPTION_b=true

# rule 1, ::/**  becomes /**
regex1=::[ ]*/\\*\\*
replacement1=/\\*\\*

# rule 2, ::*  becomes *
regex2=::[ ]*\\*
replacement2=\\*

# rule 3, rem/**  becomes /**
regex3=(?iu)rem[ ]*/\\*\\*
replacement3=/\\*\\*

# rule 4, rem*  becomes *
regex4=(?iu)rem[ ]*\\*
replacement4=\\*

# rule 5, rem  becomes //
regex5=(?iu)rem([ ]+)
replacement5=//$1

# rule 6, ::  becomes //
regex6=::
replacement6=//

# rule 7, all the BAT code
regex7=(?m)\\A((?:[ ]*[\\*/].*[\\n\\f\\r]+)*)((?:[ ]*[^\\*/].*[\\n\\f\\r]+)*)(.*)\\Z
#replacement7= $1 /**@{*/ ; main(%1...){ /* \n$2$3 \n*/ } /**@}*/
#replacement7= primo "$1" secondo "$2" terzo "$3"
 
# rule 7, all the BAT code
#regex7=(?sm)\\A((?:[ ]*/\\*\\*.*\\*/)*)((?:[ ]*[^\\*/].*[\\n\\f\\r]+)*)(.*)\\Z
#replacement7= $1 /**@{*/ ; main(%1...){ /* \n$2$3 \n*/ } /**@}*/
#regex7=(?sm)\\A[^\\*]*(/\\*\\*.*?\\*/)[^\\*]*(/\\*\\*.*?\\*/)(.*)\\Z
replacement7= primo "$1" secondo "$2" terzo "$3"
 