#/** @file
# Regex rules for BAT files processing.
# The file regexfilter.java, with this regex set, transforms a '*.bat' file in a java-like file that can be processed by Doxygen.
# Comments blocs in java style ("rem "+"/"+"*"+"* ", or "::"+"/"+"*"+"* ") also multiline ( "rem *" or "::*" )
# ends with "rem "+"*"+"/"  or ":: "+"*"+"/".
# In data section, double the "rem" or "::"
# @note
#  - Rule numbers must start from 1 and must be progressive. <br />
#  - Avoid the presence of Java comment sequences, in comment and regex. Use exploded or escaped style.
# 
#  This file must be used with regexfilter.java in shell or using a custom driver (see BATdoxFilter.bat)
#Sat Feb 19 22:26:38 CET 2011 
#*/

/** @file
 * @version 06/01/19 for Doxygen 1.8.15
 * @author Copyright &copy;2006 Marco Sillano.
 */
/**
*Pseudo-function with actual regex.
*/
## This will force block mode (same as "-b" on command line)
_CL_OPTION_b=true

## rule 1, starting <spaces>*::|rem becomes ::
regex1=(?mi)^[ ]*(::|rem)
replacement1=::

## rule 2, starting ::  ::|rem becomes ::::
regex2=(?mi)^::[ ]*(::|rem)[\\s]*([\\S].*)$
replacement2=::::$2

## rule 3, eliminates single rem comments
regex3=(?m)^::[\\s]*[\\S&&[^:/\\*]].*$
replacement3=

## rule 4, eliminates starting ::
regex4=(?m)^::
replacement4=

## rule 5, eliminates left spaces
regex5=(?m)^[\\s]+([\\S].*)$
replacement5=$1

## rule 6, adds pseudo-function BAT_code
# note: the '/' is single-escaped '\/' to avoid java comment sequences like *+/
regex6=(?ms)\\A.*?(^/\\*\\*.*^\\*\/)(.*)\\z
replacement6= dummy;\n $1 \n public BAT_code()\n{/\*\n$2\n*\/}\n
